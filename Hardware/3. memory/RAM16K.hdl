// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:
    DMux4Way(in=load, sel=address[0..1], a=aRAM, b=bRAM, c=cRAM, d=dRAM);
	RAM4K(in=in, load=aRAM, address=address[2..13], out=RAMA);
	RAM4K(in=in, load=bRAM, address=address[2..13], out=RAMB);
	RAM4K(in=in, load=cRAM, address=address[2..13], out=RAMC);
	RAM4K(in=in, load=dRAM, address=address[2..13], out=RAMD);
	
	Mux4Way16(a=RAMA, b=RAMB, c=RAMC, d=RAMD, sel=address[0..1], out=out);
}